@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model DataAccess.DTO.PostDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="container post-detail">
    <div class="post-detail-container ">
        <div class=" mx-auto border-bottom ">
            <div class="post-detail-header mb-5 ">
                <h2 class="post-detail-title">@Model.Title</h2>
                <span class="mb-5">
                    <i>@Model.Summary</i>
                </span>
                <div class="author-section">
                    <span>@Model.Author.FullName</span>
                </div>
            </div>
            <div class="post-detail-content">
                <p>@Model.Content</p>
            </div>
        </div>
        <div class="post-detail-author p-3 mt-3">
            <i class="fa-solid fa-user"></i>
            <span>@Model.Author.FullName</span>
        </div>
        <section class="post-detail-comment-section  my-4 pb-4"
                 id="comment-section">
            <div id="comment-form">
                <form class="comment-form">
                    <input class="comment-data border-0"
                           type="text"
                           id="commentData"
                           placeholder="Nhap nhan xet cua ban: ">
                    <button id="sendBtn"
                            type="button"
                            onclick="postComment()"
                            class="btn btn-light">
                        Send
                    </button>
                </form>
            </div>
            <div class="comment-tree" id="commentTree">
            </div>
        </section>
    </div>
</section>
<script type="text/javascript">
async function getCommentById(id = 0) {
    if (id !== 0) {
        await fetch(`https://localhost:5001/api/Comment/postid?postid=${id}`, {
            headers: {
                "Content-Type": "application/json",
            }, method: "get"
        }).then(res => res.json())
            .then(data => displayComment(data))
            .catch(e => console.error(e));
    } else {
        console.log("There is no comment here");
        }
}
async function displayComment(data = []) {
    const commentTree = document.getElementById("commentTree");

    data.forEach((item) => {
        const commentNode = document.createElement("div");
        commentNode.className = "comment-node mb-5";
        commentNode.innerHTML = ` <div class="comment-node-header mb-3">
                        <div class="avatar ">
                               <i class="fa-solid fa-user"></i>
                        </div>
                        <div class="info mx-3">
                            <div class="user">${item["userName"]}</div>
                            <div class="date-posted">${item["publishedAt"]}</div>
                        </div>
                    </div>
                    <div class="comment-node-content">
                        <p>${item["content"]}</p>
                    </div>
                    <div class="comment-node-action">
                        <button class="btn btn-light px-2 py-1">
                            <i class="fa-regular fa-heart"></i>
                        </button>
                        <button class="btn btn-light px-2 py-1">Reply</button>
                    </div>`;
        commentTree.appendChild(commentNode);
    })
}
const commentDate = document.getElementById("commentData").value;
let comment = {
   id: 0,
   postId: @Model.Id,
   userId: 2,
   title: "Title",
   createAt: new Date().getDate(),
   published: 0,
   publishedAt: new Date().getDate(),
   content: commentDate
}
async function postComment() {
     const commentTree = document.getElementById("commentTree");
    await fetch("https://localhost:5001/api/Comment", {
        headers: {
            "Content-Type": "application/json"
        } , method: "post",
        body: JSON.stringify(comment)
    }).then(res => res.json())
    .then((data) => {
            console.log(data);
            const commentNode = document.createElement("div");
                    commentNode.className = "comment-node mb-5";
                    commentNode.innerHTML = ` <div class="comment-node-header mb-3">
                                    <div class="avatar ">
                                           <i class="fa-solid fa-user"></i>
                                    </div>
                                    <div class="info mx-3">
                                        <div class="user">${data["userName"]}</div>
                                        <div class="date-posted">${data["publishedAt"]}</div>
                                    </div>
                                </div>
                                <div class="comment-node-content">
                                    <p>${data["content"]}</p>
                                </div>
                                <div class="comment-node-action">
                                    <button class="btn btn-light px-2 py-1">
                                        <i class="fa-regular fa-heart"></i>
                                    </button>
                                    <button class="btn btn-light px-2 py-1">Reply</button>
                                </div>`;
                    commentTree.appendChild(commentNode);
        })
    .catch(e => console.error(e))   
}
getCommentById(@Model.Id);
</script>